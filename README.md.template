# FlowMinGo
{{- if .Package.Library }}
{{ template "badge" .Package.Import }}
{{ end -}}

{{ with .Module.Deprecated -}}
    > [!CAUTION]
    > {{ . }}

{{ end -}}

FlowMinGo (output Flow Minimizer for Go) is a powerful and flexible package designed with the goal of simplifying the process of capturing output stream files in Go applications. FlowMinGo provides robust utilities to capture standard output and error streams as well as other outputs efficiently.

## Features

- **Capture Output Streams**: Easily capture and manipulate `stdout` and `stderr` streams or other file outputs.
- **Restore Original State**: Restore the original state of output streams after capturing easily.
- **Flexible Integration**: Integrate seamlessly with your existing Go projects.
- **High Performance**: Optimized for performance and minimal overhead.
- **Thread-Safe**: FlowMinGo is thread-safe and can be used in concurrent applications.

{{- $modDocs := not .Module.Documentation.Empty -}}
{{- if and .ProjectRoot $modDocs -}}
{{- if .Package.Command }}{{ template "badge" .Module.Path }}{{ end }}
{{ .Module.Documentation.Markdown 1 }}
---
{{ end }}

## Installation

To install FlowMinGo, use `go get`:
```shell
go get {{.Package.Import}}
```

## Usage

### Capturing Standard Output

Let's start by capturing the standard output:

{{ template "example" .Package.ExternalExamples.Named "_captureStdout" -}}

### Capturing Both Standard Outputs

FlowMinGo allows you to capture the output to `stdout` and `stderr` or any other output stream with ease:

{{ template "example" .Package.ExternalExamples.Named "CaptureStdoutAndStderr" -}}

### Capturing Custom Output

You can also capture custom output streams with FlowMinGo. Here's an example:

{{ template "example" .Package.ExternalExamples.Named "_captureCustomOutputs" -}}

### Stackable Capturing

FlowMinGo allows you to stack multiple captures on top of each other. Let's see how it works:

{{ template "example" .Package.ExternalExamples.Named "_stackableCapturing" -}}

## Contributing

We welcome contributions from the community! If you have any ideas, suggestions, or bug reports, please open an issue or submit a pull request on GitHub.

## License

FlowMinGo is licensed under the MIT License. See the `LICENSE` file for more details.

{{/* .Package.Documentation.Markdown 2 */}}{{- "" -}}

---
Automatically generated by [autoreadme](https://github.com/jimmyfrasche/autoreadme)

{{ define "badge" }}
[![Go Reference](https://pkg.go.dev/badge/{{ . }}.svg)](https://pkg.go.dev/{{ . }})
{{ end -}}

{{- define "example" -}}
{{- .Code }}
Output:
{{ .Output }}
{{ end -}}
